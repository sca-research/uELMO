!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
Assign	/home/salties/git/uELMO/Linux/uelmo/EmuIO.c	145;"	d	file:
Assign	/home/salties/git/uELMO/Linux/uelmo/EmuIO.c	191;"	d	file:
CORE_H_	/home/salties/git/uELMO/Linux/uelmo/core.h	3;"	d
CORE_STATUS	/home/salties/git/uELMO/Linux/uelmo/core.h	/^} CORE_STATUS;$/;"	t	typeref:struct:__anon1
CPSR_C	/home/salties/git/uELMO/Linux/uelmo/core.h	8;"	d
CPSR_N	/home/salties/git/uELMO/Linux/uelmo/core.h	6;"	d
CPSR_Q	/home/salties/git/uELMO/Linux/uelmo/core.h	10;"	d
CPSR_V	/home/salties/git/uELMO/Linux/uelmo/core.h	9;"	d
CPSR_Z	/home/salties/git/uELMO/Linux/uelmo/core.h	7;"	d
Clock	/home/salties/git/uELMO/Linux/uelmo/core.h	/^void Clock(bool);$/;"	p	signature:(bool)
Clock	core.c	/^void Clock(bool pause)$/;"	f
Close_DataFile	/home/salties/git/uELMO/Linux/uelmo/EmuIO.c	/^void Close_DataFile()		\/\/SMURF_ADAPTING, change this$/;"	f
Close_DataFile	/home/salties/git/uELMO/Linux/uelmo/EmuIO.h	/^void Close_DataFile();$/;"	p	signature:()
Close_Output	/home/salties/git/uELMO/Linux/uelmo/EmuIO.c	/^void Close_Output()		\/\/SMURF_ADAPTING, change this$/;"	f
Close_Output	/home/salties/git/uELMO/Linux/uelmo/EmuIO.h	/^void Close_Output();$/;"	p	signature:()
D2E_instrreg	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint16_t D2E_instrreg;	\/\/Pesudo register: in theory should be already tranferred to control signal, here we store the instruction instead$/;"	m	struct:__anon1	access:public
D2E_instrreg	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx D2E_instrreg;	\/\/Pesudo register: in theory should be already tranferred to control signal, here we store the instruction instead$/;"	m	struct:__anon1	access:public
D2E_reg1	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int D2E_reg1;	\/\/pipeline register, barrier between Decode and Execute   (i.e. E.1)$/;"	m	struct:__anon1	access:public
D2E_reg1	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx D2E_reg1;	\/\/pipeline register, barrier between Decode and Execute   (i.e. E.1)$/;"	m	struct:__anon1	access:public
D2E_reg1_data	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int D2E_reg1_data;	\/\/input data for pipeline register 1, barrier between Decode and Execute     (i.e. D.9)$/;"	m	struct:__anon1	access:public
D2E_reg1_data	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx D2E_reg1_data;	\/\/input data for pipeline register 1, barrier between Decode and Execute     (i.e. D.9)$/;"	m	struct:__anon1	access:public
D2E_reg1_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool D2E_reg1_valid;	\/\/update pipeline register 1$/;"	m	struct:__anon1	access:public
D2E_reg1_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx D2E_reg1_valid;	\/\/update pipeline register 1$/;"	m	struct:__anon1	access:public
D2E_reg2	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int D2E_reg2;	\/\/pipeline register, barrier between Decode and Execute   (i.e. E.2)$/;"	m	struct:__anon1	access:public
D2E_reg2	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx D2E_reg2;	\/\/pipeline register, barrier between Decode and Execute   (i.e. E.2)$/;"	m	struct:__anon1	access:public
D2E_reg2_data	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int D2E_reg2_data;	\/\/input data for pipeline register 2, barrier between Decode and Execute     (i.e. D.10)$/;"	m	struct:__anon1	access:public
D2E_reg2_data	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx D2E_reg2_data;	\/\/input data for pipeline register 2, barrier between Decode and Execute     (i.e. D.10)$/;"	m	struct:__anon1	access:public
D2E_reg2_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool D2E_reg2_valid;	\/\/update pipeline register 2$/;"	m	struct:__anon1	access:public
D2E_reg2_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx D2E_reg2_valid;	\/\/update pipeline register 2$/;"	m	struct:__anon1	access:public
DECODE_H_	/home/salties/git/uELMO/Linux/uelmo/Decode.h	2;"	d
Decode_OneCycle	/home/salties/git/uELMO/Linux/uelmo/Decode.h	/^void Decode_OneCycle(bool);$/;"	p	signature:(bool)
Decode_OneCycle	Decode.c	/^void Decode_OneCycle(bool prev)$/;"	f
Decode_destination_regindex	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint8_t Decode_destination_regindex;	\/\/Destination register index$/;"	m	struct:__anon1	access:public
Decode_destination_regindex	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Decode_destination_regindex;	\/\/Destination register index$/;"	m	struct:__anon1	access:public
Decode_instr_disp	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    char Decode_instr_disp[50];	\/\/Discription for the decode instruction$/;"	m	struct:__anon1	access:public
Decode_instr_disp	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Decode_instr_disp;	\/\/Discription for the decode instruction$/;"	m	struct:__anon1	access:public
Decode_port_data	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int Decode_port_data[3];	\/\/Current Decoding Read ports data (i.e. D.5-D.7)$/;"	m	struct:__anon1	access:public
Decode_port_data	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Decode_port_data;	\/\/Current Decoding Read ports data (i.e. D.5-D.7)$/;"	m	struct:__anon1	access:public
Decode_port_regindex	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint8_t Decode_port_regindex[3];	\/\/Current Decoding Read ports index (0-15, often 0-7) (i.e. D.2-D.4)$/;"	m	struct:__anon1	access:public
Decode_port_regindex	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Decode_port_regindex;	\/\/Current Decoding Read ports index (0-15, often 0-7) (i.e. D.2-D.4)$/;"	m	struct:__anon1	access:public
Decode_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool Decode_valid;		\/\/A flag that stall the pipeline when jump happens$/;"	m	struct:__anon1	access:public
Decode_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Decode_valid;	\/\/A flag that stall the pipeline when jump happens$/;"	m	struct:__anon1	access:public
ELMO_CORE	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	9;"	d
EMUIO_H_	/home/salties/git/uELMO/Linux/uelmo/EmuIO.h	2;"	d
EMULATOR_H_	Emulator.h	3;"	d
EXECUTE_H_	/home/salties/git/uELMO/Linux/uelmo/Execute.h	2;"	d
Execute_ALU_result	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int Execute_ALU_result;	\/\/Current ALU output$/;"	m	struct:__anon1	access:public
Execute_ALU_result	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Execute_ALU_result;	\/\/Current ALU output$/;"	m	struct:__anon1	access:public
Execute_Imm	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int Execute_Imm;	\/\/Current Execute Immediate data$/;"	m	struct:__anon1	access:public
Execute_Imm	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Execute_Imm;	\/\/Current Execute Immediate data$/;"	m	struct:__anon1	access:public
Execute_OneCylce	/home/salties/git/uELMO/Linux/uelmo/Execute.h	/^bool Execute_OneCylce(bool);$/;"	p	signature:(bool)
Execute_OneCylce	Execute.c	/^bool Execute_OneCylce(bool wait_mem)$/;"	f
Execute_OneInstr	Emulator.c	/^int Execute_OneInstr(int *cycle)$/;"	f
Execute_destination_regindex	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint8_t Execute_destination_regindex;	\/\/Execute register index: 0-15 valid, 0xff: no output$/;"	m	struct:__anon1	access:public
Execute_destination_regindex	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Execute_destination_regindex;	\/\/Execute register index: 0-15 valid, 0xff: no output$/;"	m	struct:__anon1	access:public
Execute_instr_disp	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    char Execute_instr_disp[50];	\/\/Discription for the execute instruction$/;"	m	struct:__anon1	access:public
Execute_instr_disp	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Execute_instr_disp;	\/\/Discription for the execute instruction$/;"	m	struct:__anon1	access:public
Execute_multicycle_regindex	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint8_t Execute_multicycle_regindex;	\/\/Current register index for multi-cycle execution: 0-7 valid$/;"	m	struct:__anon1	access:public
Execute_multicycle_regindex	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Execute_multicycle_regindex;	\/\/Current register index for multi-cycle execution: 0-7 valid$/;"	m	struct:__anon1	access:public
Execute_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool Execute_valid;		\/\/A flag that stall the pipeline when jump happens$/;"	m	struct:__anon1	access:public
Execute_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Execute_valid;	\/\/A flag that stall the pipeline when jump happens$/;"	m	struct:__anon1	access:public
F2D_instrreg	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint16_t F2D_instrreg;	\/\/pipeline register, barrier between Fetch and Decode (i.e. D.1)  $/;"	m	struct:__anon1	access:public
F2D_instrreg	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx F2D_instrreg;	\/\/pipeline register, barrier between Fetch and Decode (i.e. D.1)  $/;"	m	struct:__anon1	access:public
FETCH_H_	Fetch.h	2;"	d
Fetch_OneCycle	Fetch.c	/^void Fetch_OneCycle()$/;"	f
Fetch_instruction_new	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint16_t Fetch_instruction_new;	\/\/Fetched new instruction (i.e. F.3)$/;"	m	struct:__anon1	access:public
Fetch_instruction_new	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Fetch_instruction_new;	\/\/Fetched new instruction (i.e. F.3)$/;"	m	struct:__anon1	access:public
Fetch_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool Fetch_valid;		\/\/A flag that stall the pipeline when jump happens$/;"	m	struct:__anon1	access:public
Fetch_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Fetch_valid;	\/\/A flag that stall the pipeline when jump happens$/;"	m	struct:__anon1	access:public
Memory_addr	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int Memory_addr;	\/\/Address bus of the memory: must align to 4$/;"	m	struct:__anon1	access:public
Memory_addr	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Memory_addr;	\/\/Address bus of the memory: must align to 4$/;"	m	struct:__anon1	access:public
Memory_data	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int Memory_data;	\/\/shared (Read and write) data bus: must be 32-bit$/;"	m	struct:__anon1	access:public
Memory_data	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Memory_data;	\/\/shared (Read and write) data bus: must be 32-bit$/;"	m	struct:__anon1	access:public
Memory_instr_disp	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    char Memory_instr_disp[50];	\/\/Discription for the memory instruction$/;"	m	struct:__anon1	access:public
Memory_instr_disp	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Memory_instr_disp;	\/\/Discription for the memory instruction$/;"	m	struct:__anon1	access:public
Memory_read_targetreg	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint8_t Memory_read_targetreg;	\/\/For read instruction, the targt regsiter$/;"	m	struct:__anon1	access:public
Memory_read_targetreg	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Memory_read_targetreg;	\/\/For read instruction, the targt regsiter$/;"	m	struct:__anon1	access:public
Memory_read_targetreg_buf	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint8_t Memory_read_targetreg_buf;	\/\/For read instruction, the targt regsiter$/;"	m	struct:__anon1	access:public
Memory_read_targetreg_buf	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Memory_read_targetreg_buf;	\/\/For read instruction, the targt regsiter$/;"	m	struct:__anon1	access:public
Memory_readbuf	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int Memory_readbuf;	\/\/read buffer on the read bus$/;"	m	struct:__anon1	access:public
Memory_readbuf	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Memory_readbuf;	\/\/read buffer on the read bus$/;"	m	struct:__anon1	access:public
Memory_writebuf	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int Memory_writebuf;	\/\/write buffer on the write bus$/;"	m	struct:__anon1	access:public
Memory_writebuf	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Memory_writebuf;	\/\/write buffer on the write bus$/;"	m	struct:__anon1	access:public
Memory_writebuf_delayed	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int Memory_writebuf_delayed;	\/\/write buffer on the write bus$/;"	m	struct:__anon1	access:public
Memory_writebuf_delayed	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Memory_writebuf_delayed;	\/\/write buffer on the write bus$/;"	m	struct:__anon1	access:public
OnTrace	core.c	/^bool OnTrace = false;$/;"	v
Open_DataFile	/home/salties/git/uELMO/Linux/uelmo/EmuIO.c	/^void Open_DataFile(char *filename)	\/\/SMURF_ADAPTING, change this$/;"	f	signature:(char *filename)
Open_DataFile	/home/salties/git/uELMO/Linux/uelmo/EmuIO.h	/^void Open_DataFile(char *);$/;"	p	signature:(char *)
Open_OutputFile	/home/salties/git/uELMO/Linux/uelmo/EmuIO.c	/^void Open_OutputFile(char *filename)	\/\/SMURF_ADAPTING, change this$/;"	f	signature:(char *filename)
Open_OutputFile	/home/salties/git/uELMO/Linux/uelmo/EmuIO.h	/^void Open_OutputFile(char *);$/;"	p	signature:(char *)
Rand_Byte	/home/salties/git/uELMO/Linux/uelmo/EmuIO.c	/^unsigned int Rand_Byte()$/;"	f
Rand_Byte	/home/salties/git/uELMO/Linux/uelmo/EmuIO.h	/^unsigned int Rand_Byte();$/;"	p	signature:()
ReadFromFile	/home/salties/git/uELMO/Linux/uelmo/EmuIO.c	/^unsigned int ReadFromFile()$/;"	f
Read_Byte	/home/salties/git/uELMO/Linux/uelmo/EmuIO.c	/^unsigned int Read_Byte()$/;"	f
Read_Byte	/home/salties/git/uELMO/Linux/uelmo/EmuIO.h	/^unsigned int Read_Byte();$/;"	p	signature:()
Read_reg_update	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool Read_reg_update;	\/\/if true, update the register according to Memory_read_targetreg and Memory_readbuf$/;"	m	struct:__anon1	access:public
Read_reg_update	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Read_reg_update;	\/\/if true, update the register according to Memory_read_targetreg and Memory_readbuf$/;"	m	struct:__anon1	access:public
Read_type	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint8_t Read_type;		\/\/0 word, 1 byte, 2 half-word$/;"	m	struct:__anon1	access:public
Read_type	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Read_type;	\/\/0 word, 1 byte, 2 half-word$/;"	m	struct:__anon1	access:public
Read_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool Read_valid;		\/\/set it true when a new read address is sent to address bus$/;"	m	struct:__anon1	access:public
Read_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Read_valid;	\/\/set it true when a new read address is sent to address bus$/;"	m	struct:__anon1	access:public
SignExtend_byte_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool SignExtend_byte_valid;	\/\/sign extend$/;"	m	struct:__anon1	access:public
SignExtend_byte_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx SignExtend_byte_valid;	\/\/sign extend$/;"	m	struct:__anon1	access:public
SignExtend_halfbyte_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool SignExtend_halfbyte_valid;	\/\/sign extend$/;"	m	struct:__anon1	access:public
SignExtend_halfbyte_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx SignExtend_halfbyte_valid;	\/\/sign extend$/;"	m	struct:__anon1	access:public
SmurfAddFrame	/home/salties/git/uELMO/Linux/uelmo/EmuIO.c	/^void SmurfAddFrame()$/;"	f
SmurfUpdateFrame	/home/salties/git/uELMO/Linux/uelmo/EmuIO.c	/^void SmurfUpdateFrame()$/;"	f
UELMO_ERROR	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	3;"	d
UELMO_H	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	2;"	d
Write_Byte	/home/salties/git/uELMO/Linux/uelmo/EmuIO.c	/^void Write_Byte(uint8_t input)$/;"	f	signature:(uint8_t input)
Write_Byte	/home/salties/git/uELMO/Linux/uelmo/EmuIO.h	/^void Write_Byte(uint8_t);$/;"	p	signature:(uint8_t)
Write_EndofTrace	/home/salties/git/uELMO/Linux/uelmo/EmuIO.c	/^void Write_EndofTrace()$/;"	f
Write_EndofTrace	/home/salties/git/uELMO/Linux/uelmo/EmuIO.h	/^void Write_EndofTrace();$/;"	p	signature:()
Write_Frame	/home/salties/git/uELMO/Linux/uelmo/EmuIO.c	/^void Write_Frame()$/;"	f
Write_Frame	/home/salties/git/uELMO/Linux/uelmo/EmuIO.h	/^void Write_Frame();$/;"	p	signature:()
Write_type	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint8_t Write_type;		\/\/0 word, 1 byte, 2 half-word$/;"	m	struct:__anon1	access:public
Write_type	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Write_type;	\/\/0 word, 1 byte, 2 half-word$/;"	m	struct:__anon1	access:public
Write_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool Write_valid;		\/\/set it true when a new read address is sent to address bus$/;"	m	struct:__anon1	access:public
Write_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Write_valid;	\/\/set it true when a new read address is sent to address bus$/;"	m	struct:__anon1	access:public
Write_valid_delayed	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool Write_valid_delayed;	\/\/set it true when the previous Write_valid is true$/;"	m	struct:__anon1	access:public
Write_valid_delayed	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Write_valid_delayed;	\/\/set it true when the previous Write_valid is true$/;"	m	struct:__anon1	access:public
__anon1::D2E_instrreg	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint16_t D2E_instrreg;	\/\/Pesudo register: in theory should be already tranferred to control signal, here we store the instruction instead$/;"	m	struct:__anon1	access:public
__anon1::D2E_instrreg	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx D2E_instrreg;	\/\/Pesudo register: in theory should be already tranferred to control signal, here we store the instruction instead$/;"	m	struct:__anon1	access:public
__anon1::D2E_reg1	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int D2E_reg1;	\/\/pipeline register, barrier between Decode and Execute   (i.e. E.1)$/;"	m	struct:__anon1	access:public
__anon1::D2E_reg1	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx D2E_reg1;	\/\/pipeline register, barrier between Decode and Execute   (i.e. E.1)$/;"	m	struct:__anon1	access:public
__anon1::D2E_reg1_data	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int D2E_reg1_data;	\/\/input data for pipeline register 1, barrier between Decode and Execute     (i.e. D.9)$/;"	m	struct:__anon1	access:public
__anon1::D2E_reg1_data	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx D2E_reg1_data;	\/\/input data for pipeline register 1, barrier between Decode and Execute     (i.e. D.9)$/;"	m	struct:__anon1	access:public
__anon1::D2E_reg1_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool D2E_reg1_valid;	\/\/update pipeline register 1$/;"	m	struct:__anon1	access:public
__anon1::D2E_reg1_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx D2E_reg1_valid;	\/\/update pipeline register 1$/;"	m	struct:__anon1	access:public
__anon1::D2E_reg2	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int D2E_reg2;	\/\/pipeline register, barrier between Decode and Execute   (i.e. E.2)$/;"	m	struct:__anon1	access:public
__anon1::D2E_reg2	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx D2E_reg2;	\/\/pipeline register, barrier between Decode and Execute   (i.e. E.2)$/;"	m	struct:__anon1	access:public
__anon1::D2E_reg2_data	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int D2E_reg2_data;	\/\/input data for pipeline register 2, barrier between Decode and Execute     (i.e. D.10)$/;"	m	struct:__anon1	access:public
__anon1::D2E_reg2_data	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx D2E_reg2_data;	\/\/input data for pipeline register 2, barrier between Decode and Execute     (i.e. D.10)$/;"	m	struct:__anon1	access:public
__anon1::D2E_reg2_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool D2E_reg2_valid;	\/\/update pipeline register 2$/;"	m	struct:__anon1	access:public
__anon1::D2E_reg2_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx D2E_reg2_valid;	\/\/update pipeline register 2$/;"	m	struct:__anon1	access:public
__anon1::Decode_destination_regindex	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint8_t Decode_destination_regindex;	\/\/Destination register index$/;"	m	struct:__anon1	access:public
__anon1::Decode_destination_regindex	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Decode_destination_regindex;	\/\/Destination register index$/;"	m	struct:__anon1	access:public
__anon1::Decode_instr_disp	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    char Decode_instr_disp[50];	\/\/Discription for the decode instruction$/;"	m	struct:__anon1	access:public
__anon1::Decode_instr_disp	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Decode_instr_disp;	\/\/Discription for the decode instruction$/;"	m	struct:__anon1	access:public
__anon1::Decode_port_data	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int Decode_port_data[3];	\/\/Current Decoding Read ports data (i.e. D.5-D.7)$/;"	m	struct:__anon1	access:public
__anon1::Decode_port_data	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Decode_port_data;	\/\/Current Decoding Read ports data (i.e. D.5-D.7)$/;"	m	struct:__anon1	access:public
__anon1::Decode_port_regindex	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint8_t Decode_port_regindex[3];	\/\/Current Decoding Read ports index (0-15, often 0-7) (i.e. D.2-D.4)$/;"	m	struct:__anon1	access:public
__anon1::Decode_port_regindex	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Decode_port_regindex;	\/\/Current Decoding Read ports index (0-15, often 0-7) (i.e. D.2-D.4)$/;"	m	struct:__anon1	access:public
__anon1::Decode_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool Decode_valid;		\/\/A flag that stall the pipeline when jump happens$/;"	m	struct:__anon1	access:public
__anon1::Decode_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Decode_valid;	\/\/A flag that stall the pipeline when jump happens$/;"	m	struct:__anon1	access:public
__anon1::Execute_ALU_result	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int Execute_ALU_result;	\/\/Current ALU output$/;"	m	struct:__anon1	access:public
__anon1::Execute_ALU_result	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Execute_ALU_result;	\/\/Current ALU output$/;"	m	struct:__anon1	access:public
__anon1::Execute_Imm	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int Execute_Imm;	\/\/Current Execute Immediate data$/;"	m	struct:__anon1	access:public
__anon1::Execute_Imm	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Execute_Imm;	\/\/Current Execute Immediate data$/;"	m	struct:__anon1	access:public
__anon1::Execute_destination_regindex	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint8_t Execute_destination_regindex;	\/\/Execute register index: 0-15 valid, 0xff: no output$/;"	m	struct:__anon1	access:public
__anon1::Execute_destination_regindex	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Execute_destination_regindex;	\/\/Execute register index: 0-15 valid, 0xff: no output$/;"	m	struct:__anon1	access:public
__anon1::Execute_instr_disp	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    char Execute_instr_disp[50];	\/\/Discription for the execute instruction$/;"	m	struct:__anon1	access:public
__anon1::Execute_instr_disp	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Execute_instr_disp;	\/\/Discription for the execute instruction$/;"	m	struct:__anon1	access:public
__anon1::Execute_multicycle_regindex	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint8_t Execute_multicycle_regindex;	\/\/Current register index for multi-cycle execution: 0-7 valid$/;"	m	struct:__anon1	access:public
__anon1::Execute_multicycle_regindex	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Execute_multicycle_regindex;	\/\/Current register index for multi-cycle execution: 0-7 valid$/;"	m	struct:__anon1	access:public
__anon1::Execute_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool Execute_valid;		\/\/A flag that stall the pipeline when jump happens$/;"	m	struct:__anon1	access:public
__anon1::Execute_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Execute_valid;	\/\/A flag that stall the pipeline when jump happens$/;"	m	struct:__anon1	access:public
__anon1::F2D_instrreg	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint16_t F2D_instrreg;	\/\/pipeline register, barrier between Fetch and Decode (i.e. D.1)  $/;"	m	struct:__anon1	access:public
__anon1::F2D_instrreg	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx F2D_instrreg;	\/\/pipeline register, barrier between Fetch and Decode (i.e. D.1)  $/;"	m	struct:__anon1	access:public
__anon1::Fetch_instruction_new	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint16_t Fetch_instruction_new;	\/\/Fetched new instruction (i.e. F.3)$/;"	m	struct:__anon1	access:public
__anon1::Fetch_instruction_new	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Fetch_instruction_new;	\/\/Fetched new instruction (i.e. F.3)$/;"	m	struct:__anon1	access:public
__anon1::Fetch_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool Fetch_valid;		\/\/A flag that stall the pipeline when jump happens$/;"	m	struct:__anon1	access:public
__anon1::Fetch_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Fetch_valid;	\/\/A flag that stall the pipeline when jump happens$/;"	m	struct:__anon1	access:public
__anon1::Memory_addr	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int Memory_addr;	\/\/Address bus of the memory: must align to 4$/;"	m	struct:__anon1	access:public
__anon1::Memory_addr	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Memory_addr;	\/\/Address bus of the memory: must align to 4$/;"	m	struct:__anon1	access:public
__anon1::Memory_data	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int Memory_data;	\/\/shared (Read and write) data bus: must be 32-bit$/;"	m	struct:__anon1	access:public
__anon1::Memory_data	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Memory_data;	\/\/shared (Read and write) data bus: must be 32-bit$/;"	m	struct:__anon1	access:public
__anon1::Memory_instr_disp	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    char Memory_instr_disp[50];	\/\/Discription for the memory instruction$/;"	m	struct:__anon1	access:public
__anon1::Memory_instr_disp	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Memory_instr_disp;	\/\/Discription for the memory instruction$/;"	m	struct:__anon1	access:public
__anon1::Memory_read_targetreg	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint8_t Memory_read_targetreg;	\/\/For read instruction, the targt regsiter$/;"	m	struct:__anon1	access:public
__anon1::Memory_read_targetreg	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Memory_read_targetreg;	\/\/For read instruction, the targt regsiter$/;"	m	struct:__anon1	access:public
__anon1::Memory_read_targetreg_buf	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint8_t Memory_read_targetreg_buf;	\/\/For read instruction, the targt regsiter$/;"	m	struct:__anon1	access:public
__anon1::Memory_read_targetreg_buf	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Memory_read_targetreg_buf;	\/\/For read instruction, the targt regsiter$/;"	m	struct:__anon1	access:public
__anon1::Memory_readbuf	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int Memory_readbuf;	\/\/read buffer on the read bus$/;"	m	struct:__anon1	access:public
__anon1::Memory_readbuf	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Memory_readbuf;	\/\/read buffer on the read bus$/;"	m	struct:__anon1	access:public
__anon1::Memory_writebuf	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int Memory_writebuf;	\/\/write buffer on the write bus$/;"	m	struct:__anon1	access:public
__anon1::Memory_writebuf	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Memory_writebuf;	\/\/write buffer on the write bus$/;"	m	struct:__anon1	access:public
__anon1::Memory_writebuf_delayed	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int Memory_writebuf_delayed;	\/\/write buffer on the write bus$/;"	m	struct:__anon1	access:public
__anon1::Memory_writebuf_delayed	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Memory_writebuf_delayed;	\/\/write buffer on the write bus$/;"	m	struct:__anon1	access:public
__anon1::Read_reg_update	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool Read_reg_update;	\/\/if true, update the register according to Memory_read_targetreg and Memory_readbuf$/;"	m	struct:__anon1	access:public
__anon1::Read_reg_update	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Read_reg_update;	\/\/if true, update the register according to Memory_read_targetreg and Memory_readbuf$/;"	m	struct:__anon1	access:public
__anon1::Read_type	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint8_t Read_type;		\/\/0 word, 1 byte, 2 half-word$/;"	m	struct:__anon1	access:public
__anon1::Read_type	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Read_type;	\/\/0 word, 1 byte, 2 half-word$/;"	m	struct:__anon1	access:public
__anon1::Read_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool Read_valid;		\/\/set it true when a new read address is sent to address bus$/;"	m	struct:__anon1	access:public
__anon1::Read_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Read_valid;	\/\/set it true when a new read address is sent to address bus$/;"	m	struct:__anon1	access:public
__anon1::SignExtend_byte_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool SignExtend_byte_valid;	\/\/sign extend$/;"	m	struct:__anon1	access:public
__anon1::SignExtend_byte_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx SignExtend_byte_valid;	\/\/sign extend$/;"	m	struct:__anon1	access:public
__anon1::SignExtend_halfbyte_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool SignExtend_halfbyte_valid;	\/\/sign extend$/;"	m	struct:__anon1	access:public
__anon1::SignExtend_halfbyte_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx SignExtend_halfbyte_valid;	\/\/sign extend$/;"	m	struct:__anon1	access:public
__anon1::Write_type	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    uint8_t Write_type;		\/\/0 word, 1 byte, 2 half-word$/;"	m	struct:__anon1	access:public
__anon1::Write_type	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Write_type;	\/\/0 word, 1 byte, 2 half-word$/;"	m	struct:__anon1	access:public
__anon1::Write_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool Write_valid;		\/\/set it true when a new read address is sent to address bus$/;"	m	struct:__anon1	access:public
__anon1::Write_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Write_valid;	\/\/set it true when a new read address is sent to address bus$/;"	m	struct:__anon1	access:public
__anon1::Write_valid_delayed	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool Write_valid_delayed;	\/\/set it true when the previous Write_valid is true$/;"	m	struct:__anon1	access:public
__anon1::Write_valid_delayed	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx Write_valid_delayed;	\/\/set it true when the previous Write_valid is true$/;"	m	struct:__anon1	access:public
__anon1::core_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool core_valid;		\/\/a flag for reaching the end of this execution$/;"	m	struct:__anon1	access:public
__anon1::core_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx core_valid;	\/\/a flag for reaching the end of this execution$/;"	m	struct:__anon1	access:public
__anon1::cpsr	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int cpsr;		\/\/architectural$/;"	m	struct:__anon1	access:public
__anon1::cpsr	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx cpsr;	\/\/architectural$/;"	m	struct:__anon1	access:public
__anon1::cpsr_data	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int cpsr_data;	\/\/new data for cpsr$/;"	m	struct:__anon1	access:public
__anon1::cpsr_data	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx cpsr_data;	\/\/new data for cpsr$/;"	m	struct:__anon1	access:public
__anon1::cpsr_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool cpsr_valid;		\/\/update cpsr$/;"	m	struct:__anon1	access:public
__anon1::cpsr_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx cpsr_valid;	\/\/update cpsr$/;"	m	struct:__anon1	access:public
__anon1::glitchy_Decode_port_data	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int glitchy_Decode_port_data[3];	\/\/Decode the current instruction according to the previous instruction decoding style$/;"	m	struct:__anon1	access:public
__anon1::glitchy_Decode_port_data	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx glitchy_Decode_port_data;	\/\/Decode the current instruction according to the previous instruction decoding style$/;"	m	struct:__anon1	access:public
__anon1::glitchy_Decode_port_regindex	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int glitchy_Decode_port_regindex[3];	\/\/Decode the current instruction according to the previous instruction decoding style$/;"	m	struct:__anon1	access:public
__anon1::glitchy_Decode_port_regindex	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx glitchy_Decode_port_regindex;	\/\/Decode the current instruction according to the previous instruction decoding style$/;"	m	struct:__anon1	access:public
__anon1::reg	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int reg[16];	\/\/architectural$/;"	m	struct:__anon1	access:public
__anon1::reg	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx reg;	\/\/architectural$/;"	m	struct:__anon1	access:public
__anon1::traceno	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx traceno;$/;"	m	struct:__anon1	access:public
check_delay	/home/salties/git/uELMO/Linux/uelmo/core.h	/^bool check_delay(unsigned int);$/;"	p	signature:(unsigned int)
check_delay	core.c	/^bool check_delay(unsigned int reg)$/;"	f
core_current	core.c	/^CORE_STATUS core_current;$/;"	v
core_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool core_valid;		\/\/a flag for reaching the end of this execution$/;"	m	struct:__anon1	access:public
core_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx core_valid;	\/\/a flag for reaching the end of this execution$/;"	m	struct:__anon1	access:public
cpsr	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int cpsr;		\/\/architectural$/;"	m	struct:__anon1	access:public
cpsr	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx cpsr;	\/\/architectural$/;"	m	struct:__anon1	access:public
cpsr_data	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int cpsr_data;	\/\/new data for cpsr$/;"	m	struct:__anon1	access:public
cpsr_data	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx cpsr_data;	\/\/new data for cpsr$/;"	m	struct:__anon1	access:public
cpsr_valid	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    bool cpsr_valid;		\/\/update cpsr$/;"	m	struct:__anon1	access:public
cpsr_valid	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx cpsr_valid;	\/\/update cpsr$/;"	m	struct:__anon1	access:public
datafp	/home/salties/git/uELMO/Linux/uelmo/EmuIO.c	/^FILE *datafp = NULL;$/;"	v
do_cflag	/home/salties/git/uELMO/Linux/uelmo/core.h	/^void do_cflag(unsigned int, unsigned int, unsigned int);$/;"	p	signature:(unsigned int, unsigned int, unsigned int)
do_cflag	core.c	/^void do_cflag(unsigned int a, unsigned int b, unsigned int c)$/;"	f
do_cflag_bit	/home/salties/git/uELMO/Linux/uelmo/core.h	/^void do_cflag_bit(unsigned int);$/;"	p	signature:(unsigned int)
do_cflag_bit	core.c	/^void do_cflag_bit(unsigned int x)$/;"	f
do_nflag	/home/salties/git/uELMO/Linux/uelmo/core.h	/^void do_nflag(unsigned int);$/;"	p	signature:(unsigned int)
do_nflag	core.c	/^void do_nflag(unsigned int x)$/;"	f
do_vflag	/home/salties/git/uELMO/Linux/uelmo/core.h	/^void do_vflag(unsigned int, unsigned int, unsigned int);$/;"	p	signature:(unsigned int, unsigned int, unsigned int)
do_vflag	core.c	/^void do_vflag(unsigned int a, unsigned int b, unsigned int c)$/;"	f
do_vflag_bit	/home/salties/git/uELMO/Linux/uelmo/core.h	/^void do_vflag_bit(unsigned int);$/;"	p	signature:(unsigned int)
do_vflag_bit	core.c	/^void do_vflag_bit(unsigned int x)$/;"	f
do_zflag	/home/salties/git/uELMO/Linux/uelmo/core.h	/^void do_zflag(unsigned int);$/;"	p	signature:(unsigned int)
do_zflag	core.c	/^void do_zflag(unsigned int x)$/;"	f
glitchy_Decode_port_data	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int glitchy_Decode_port_data[3];	\/\/Decode the current instruction according to the previous instruction decoding style$/;"	m	struct:__anon1	access:public
glitchy_Decode_port_data	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx glitchy_Decode_port_data;	\/\/Decode the current instruction according to the previous instruction decoding style$/;"	m	struct:__anon1	access:public
glitchy_Decode_port_regindex	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int glitchy_Decode_port_regindex[3];	\/\/Decode the current instruction according to the previous instruction decoding style$/;"	m	struct:__anon1	access:public
glitchy_Decode_port_regindex	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx glitchy_Decode_port_regindex;	\/\/Decode the current instruction according to the previous instruction decoding style$/;"	m	struct:__anon1	access:public
outfp	/home/salties/git/uELMO/Linux/uelmo/EmuIO.c	/^FILE *outfp = NULL;$/;"	v
read_register	/home/salties/git/uELMO/Linux/uelmo/core.h	/^unsigned int read_register(unsigned int);$/;"	p	signature:(unsigned int)
read_register	core.c	/^unsigned int read_register(unsigned int reg)$/;"	f
read_register_forward	/home/salties/git/uELMO/Linux/uelmo/core.h	/^unsigned int read_register_forward(unsigned int);$/;"	p	signature:(unsigned int)
read_register_forward	core.c	/^unsigned int read_register_forward(unsigned int reg)$/;"	f
reg	/home/salties/git/uELMO/Linux/uelmo/core.h	/^    unsigned int reg[16];	\/\/architectural$/;"	m	struct:__anon1	access:public
reg	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx reg;	\/\/architectural$/;"	m	struct:__anon1	access:public
reset	Emulator.c	/^int reset(void)$/;"	f
run	Emulator.c	/^int run(void)$/;"	f
smftidx	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^} smftidx;$/;"	v	typeref:struct:__anon1
traceno	/home/salties/git/uELMO/Linux/uelmo/uelmo.h	/^    SmurfTraceFrameIdx traceno;$/;"	m	struct:__anon1	access:public
write_register	/home/salties/git/uELMO/Linux/uelmo/core.h	/^void write_register(unsigned int, unsigned int);$/;"	p	signature:(unsigned int, unsigned int)
write_register	core.c	/^void write_register(unsigned int reg, unsigned int data)$/;"	f
